module std.tag;

interface Tagged {
  Object offers(ClassData* cd);
}

Object offers-id(ClassData* id, Object obj) {
  if obj.dynamicCastTo(id)
    return obj;
  
  if auto t = Tagged: obj
    return t.offers id;
  
  return null;
}

template offers(T) {
  T offers(Object obj) {
    if !obj return null;
    if (auto res = T: offers-id (class-id T, obj))
      return res;
    return null;
  }
}

template request-is(T) {
  bool request-is(string s) { return s == T.__mangle; }
}

template get-tag(T) {
  T get-tag(Object obj) {
    if (auto res = offers!T obj) return res;
    assert(false, "$obj does not offer $(T.__name)!");
  }
}