module std.tag;

interface Tag { }

interface Tagged {
  Tag offers(string name);
}

class DefaultTag : Tag, Tagged {
  string id;
  void init(string s) id = s;
  Tag offers(string s) { return [Tag:null, Tag:this][eval s == id]; }
}

template offers(T) {
  T offers(Object obj) {
    if !obj return null;
    if auto res = T: obj
      return res;
    
    if auto t = Tagged: obj
      return T: (t.offers (T.__name));
    
    return null;
  }
}

template get-tag(T) {
  T get-tag(Object obj) {
    if (auto res = offers!T obj) return res;
    assert(false, "$obj does not offer $(T.__name)!");
  }
}