module std.stream;

class iter : Iterator!ubyte[] {
  int delegate(ubyte[]) dg;
  ubyte x 512 buffer;
  bool advance() {
    int pos = dg buffer[];
    if pos == -1 {
      return false;
    }
    value = buffer[0..pos];
    return true;
  }
}

iter readDg(int delegate(ubyte[]) dg) {
  auto res = new iter;
  res.dg = dg;
  return res;
}

template dgIter(T) {
  class DelegateIterator : Iterator!type-of t() {
    T t;
    bool advance() { value = t(); return true; }
  }
  auto dgIter(T t) {
    auto res = new DelegateIterator;
    res.t = t;
    return res;
  }
}
