module std.lib.soil;

import c.SOIL;
pragma(lib, "SOIL");

import std.string, std.lib.opengl, std.lib.opengl.texture;

class SOILError : Error {
  void init() { super.init "SOILError: $(CToString SOIL_last_result())"; }
}

extern(C) int SOIL_load_OGL_texture_from_memory(char*, int, int, int, int);

class SOILTexture : Texture {
  string file;
  byte[] imgdata;
  void init(string f) { file = f; super.init(); }
  void init(byte[] d) { imgdata = d; super.init(); }
  void upload() using mode GL {
    if (file) {
      id = prefix(SOIL_).(
        load_OGL_texture (
          toStringz file,
          LOAD_AUTO,
          CREATE_NEW_ID,
          prefix(FLAG_).(MIPMAPS | INVERT_Y)));
    } else if (imgdata) {
      id = prefix(SOIL_).(
        load_OGL_texture_from_memory (
          imgdata.(char*:ptr, length),
          LOAD_AUTO,
          CREATE_NEW_ID,
          prefix(FLAG_).(MIPMAPS | INVERT_Y)));
    }
    if (!id) raise new SOILError;
    bind;
    TEXTURE_2D.GetTexLevelParameteriv(0, TEXTURE_WIDTH, &width);
    TEXTURE_2D.GetTexLevelParameteriv(0, TEXTURE_HEIGHT, &height);
  }
}
